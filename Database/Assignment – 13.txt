                   Assignment – 13
                Using the UNION clause.
1) Create a union of two queries that shows the names, cities, and ratings of all customers. Those with rating of 200 or greater will also have the words “High Rating”, while the others will have the words “Low Rating”
Ans :- SELECT cname, city, rating, 'High Rating' AS Rating_Label
    -> FROM customers
    -> WHERE rating >= 200
    ->
    -> UNION
    ->
    -> SELECT cname, city, rating, 'Low Rating' AS Rating_Label
    -> FROM customers
    -> WHERE rating < 200;

2) Write a command that produces the name and number of each salesperson and each customer with more than one current order. Put the results in alphabetical
order.
Ans:- -- Customers with more than one order
         SELECT c.Cname AS Name, c.Cnum AS Number
         FROM customers c
         JOIN orders o ON c.Cnum = o.Cnum
         GROUP BY c.Cnum, c.Cname
         HAVING COUNT(*) > 1

         UNION
 
         SELECT s.Sname AS Name, s.Snum AS Number
         FROM salespeople s
         JOIN orders o ON s.Snum = o.Snum
         GROUP BY s.Snum, s.Sname
         HAVING COUNT(*) > 1

         ORDER BY Name;

3) Form a union of three queries. Have the first select the snums of all salespeople in San Jose; the second, the cnums of all customers in San Jose; and the third the onums of all orders on October 3. Retain duplicates between the last two queries but eliminate any redundancies between either of them and the first.
(Note: in the sample tables as given, there would be no such redundancy. This is besides the point.)
Ans:-
SELECT Snum 
FROM salespeople 
WHERE City = 'San Jose'

UNION

SELECT Cnum 
FROM customers 
WHERE City = 'San Jose'
  AND Cnum NOT IN (SELECT Snum FROM salespeople WHERE City = 'San Jose')

UNION ALL

SELECT Onum 
FROM orders 
WHERE Odate = '1990-10-03'
  AND Onum NOT IN (SELECT Snum FROM salespeople WHERE City = 'San Jose');
